diff --git a/google/storage/v2/BUILD.bazel b/google/storage/v2/BUILD.bazel
index 8fa25cc09..c17d0fe82 100644
--- a/google/storage/v2/BUILD.bazel
+++ b/google/storage/v2/BUILD.bazel
@@ -58,6 +58,7 @@ proto_library(
         "//google/api:routing_proto",
         "//google/iam/v1:iam_policy_proto",
         "//google/iam/v1:policy_proto",
+        "//google/rpc:status_proto",
         "//google/type:date_proto",
         "@com_google_protobuf//:duration_proto",
         "@com_google_protobuf//:empty_proto",
@@ -132,6 +133,7 @@ go_proto_library(
         "//google/api:annotations_go_proto",
         "//google/api:routing_go_proto",
         "//google/iam/v1:iam_go_proto",
+        "//google/rpc:status_go_proto",
         "//google/type:date_go_proto",
     ],
 )
diff --git a/google/storage/v2/storage.proto b/google/storage/v2/storage.proto
index 2671acbc4..420130f15 100644
--- a/google/storage/v2/storage.proto
+++ b/google/storage/v2/storage.proto
@@ -26,6 +26,7 @@ import "google/protobuf/duration.proto";
 import "google/protobuf/empty.proto";
 import "google/protobuf/field_mask.proto";
 import "google/protobuf/timestamp.proto";
+import "google/rpc/status.proto";
 import "google/type/date.proto";
 
 option go_package = "cloud.google.com/go/storage/internal/apiv2/storagepb;storagepb";
@@ -176,12 +177,26 @@ service Storage {
     };
   }
 
-  // Deletes an object and its metadata.
+  // Deletes an object and its metadata. Deletions are permanent if versioning
+  // is not enabled for the bucket, or if the generation parameter is used, or
+  // if [soft delete](https://cloud.google.com/storage/docs/soft-delete) is not
+  // enabled for the bucket.
+  // When this API is used to delete an object from a bucket that has soft
+  // delete policy enabled, the object becomes soft deleted, and the
+  // `softDeleteTime` and `hardDeleteTime` properties are set on the object.
+  // This API cannot be used to permanently delete soft-deleted objects.
+  // Soft-deleted objects are permanently deleted according to their
+  // `hardDeleteTime`.
   //
-  // Deletions are normally permanent when versioning is disabled or whenever
-  // the generation parameter is used. However, if soft delete is enabled for
-  // the bucket, deleted objects can be restored using RestoreObject until the
-  // soft delete retention period has passed.
+  // You can use the [`RestoreObject`][google.storage.v2.Storage.RestoreObject]
+  // API to restore soft-deleted objects until the soft delete retention period
+  // has passed.
+  //
+  // **IAM Permissions**:
+  //
+  // Requires `storage.objects.delete`
+  // [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
+  // the bucket.
   rpc DeleteObject(DeleteObjectRequest) returns (google.protobuf.Empty) {
     option (google.api.routing) = {
       routing_parameters { field: "bucket" path_template: "{bucket=**}" }
@@ -217,7 +232,14 @@ service Storage {
     option (google.api.method_signature) = "upload_id";
   }
 
-  // Retrieves an object's metadata.
+  // Retrieves object metadata.
+  //
+  // **IAM Permissions**:
+  //
+  // Requires `storage.objects.get`
+  // [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
+  // the bucket. To return object ACLs, the authenticated user must also have
+  // the `storage.objects.getIamPolicy` permission.
   rpc GetObject(GetObjectRequest) returns (Object) {
     option (google.api.routing) = {
       routing_parameters { field: "bucket" path_template: "{bucket=**}" }
@@ -226,7 +248,13 @@ service Storage {
     option (google.api.method_signature) = "bucket,object,generation";
   }
 
-  // Reads an object's data.
+  // Retrieves object data.
+  //
+  // **IAM Permissions**:
+  //
+  // Requires `storage.objects.get`
+  // [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
+  // the bucket.
   rpc ReadObject(ReadObjectRequest) returns (stream ReadObjectResponse) {
     option (google.api.routing) = {
       routing_parameters { field: "bucket" path_template: "{bucket=**}" }
@@ -235,6 +263,16 @@ service Storage {
     option (google.api.method_signature) = "bucket,object,generation";
   }
 
+  rpc BidiReadObject(stream BidiReadObjectRequest)
+      returns (stream BidiReadObjectResponse) {
+    option (google.api.routing) = {
+      routing_parameters {
+        field: "read_object_spec.bucket"
+        path_template: "{bucket=**}"
+      }
+    };
+  }
+
   // Updates an object's metadata.
   // Equivalent to JSON API's storage.objects.patch.
   rpc UpdateObject(UpdateObjectRequest) returns (Object) {
@@ -297,12 +335,18 @@ service Storage {
   // whether the service views the object as complete.
   //
   // Attempting to resume an already finalized object will result in an OK
-  // status, with a WriteObjectResponse containing the finalized object's
+  // status, with a `WriteObjectResponse` containing the finalized object's
   // metadata.
   //
   // Alternatively, the BidiWriteObject operation may be used to write an
   // object with controls over flushing and the ability to fetch the ability to
   // determine the current persisted size.
+  //
+  // **IAM Permissions**:
+  //
+  // Requires `storage.objects.create`
+  // [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
+  // the bucket.
   rpc WriteObject(stream WriteObjectRequest) returns (WriteObjectResponse) {}
 
   // Stores a new object and metadata.
@@ -324,6 +368,13 @@ service Storage {
       returns (stream BidiWriteObjectResponse) {}
 
   // Retrieves a list of objects matching the criteria.
+  //
+  // **IAM Permissions**:
+  //
+  // The authenticated user requires `storage.objects.list`
+  // [IAM permission](https://cloud.google.com/iam/docs/overview#permissions)
+  // to use this method. To return object ACLs, the authenticated user must also
+  // have the `storage.objects.getIamPolicy` permission.
   rpc ListObjects(ListObjectsRequest) returns (ListObjectsResponse) {
     option (google.api.routing) = {
       routing_parameters { field: "parent" path_template: "{bucket=**}" }
@@ -343,9 +394,19 @@ service Storage {
     };
   }
 
-  // Starts a resumable write. How long the write operation remains valid, and
-  // what happens when the write operation becomes invalid, are
-  // service-dependent.
+  // Starts a resumable write operation. This
+  // method is part of the [Resumable
+  // upload](https://cloud.google.com/storage/docs/resumable-uploads) feature.
+  // This allows you to upload large objects in multiple chunks, which is more
+  // resilient to network interruptions than a single upload. The validity
+  // duration of the write operation, and the consequences of it becoming
+  // invalid, are service-dependent.
+  //
+  // **IAM Permissions**:
+  //
+  // Requires `storage.objects.create`
+  // [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
+  // the bucket.
   rpc StartResumableWrite(StartResumableWriteRequest)
       returns (StartResumableWriteResponse) {
     option (google.api.routing) = {
@@ -356,18 +417,22 @@ service Storage {
     };
   }
 
-  // Determines the `persisted_size` for an object that is being written, which
-  // can then be used as the `write_offset` for the next `Write()` call.
+  // Determines the `persisted_size` of an object that is being written. This
+  // method is part of the [resumable
+  // upload](https://cloud.google.com/storage/docs/resumable-uploads) feature.
+  // The returned value is the size of the object that has been persisted so
+  // far. The value can be used as the `write_offset` for the next `Write()`
+  // call.
   //
-  // If the object does not exist (i.e., the object has been deleted, or the
-  // first `Write()` has not yet reached the service), this method returns the
+  // If the object does not exist, meaning if it was deleted, or the
+  // first `Write()` has not yet reached the service, this method returns the
   // error `NOT_FOUND`.
   //
-  // The client **may** call `QueryWriteStatus()` at any time to determine how
-  // much data has been processed for this object. This is useful if the
-  // client is buffering data and needs to know which data can be safely
-  // evicted. For any sequence of `QueryWriteStatus()` calls for a given
-  // object name, the sequence of returned `persisted_size` values will be
+  // This method is useful for clients that buffer data and need to know which
+  // data can be safely evicted. The client can call `QueryWriteStatus()` at any
+  // time to determine how much data has been logged for this object.
+  // For any sequence of `QueryWriteStatus()` calls for a given
+  // object name, the sequence of returned `persisted_size` values are
   // non-decreasing.
   rpc QueryWriteStatus(QueryWriteStatusRequest)
       returns (QueryWriteStatusResponse) {
@@ -856,6 +921,205 @@ message ReadObjectResponse {
   Object metadata = 4;
 }
 
+// Describes the object to read in a BidiReadObject request.
+message BidiReadObjectSpec {
+  // Required. The name of the bucket containing the object to read.
+  string bucket = 1 [
+    (google.api.field_behavior) = REQUIRED,
+    (google.api.resource_reference) = { type: "storage.googleapis.com/Bucket" }
+  ];
+
+  // Required. The name of the object to read.
+  string object = 2 [(google.api.field_behavior) = REQUIRED];
+
+  // If present, selects a specific revision of this object (as opposed
+  // to the latest version, the default).
+  int64 generation = 3;
+
+  // Makes the operation conditional on whether the object's current generation
+  // matches the given value. Setting to 0 makes the operation succeed only if
+  // there are no live versions of the object.
+  optional int64 if_generation_match = 4;
+
+  // Makes the operation conditional on whether the object's live generation
+  // does not match the given value. If no live object exists, the precondition
+  // fails. Setting to 0 makes the operation succeed only if there is a live
+  // version of the object.
+  optional int64 if_generation_not_match = 5;
+
+  // Makes the operation conditional on whether the object's current
+  // metageneration matches the given value.
+  optional int64 if_metageneration_match = 6;
+
+  // Makes the operation conditional on whether the object's current
+  // metageneration does not match the given value.
+  optional int64 if_metageneration_not_match = 7;
+
+  // A set of parameters common to Storage API requests concerning an object.
+  CommonObjectRequestParams common_object_request_params = 8;
+
+  // Mask specifying which fields to read.
+  // The checksummed_data field and its children will always be present.
+  // If no mask is specified, will default to all fields except metadata.owner
+  // and metadata.acl.
+  // * may be used to mean "all fields".
+  // As per https://google.aip.dev/161, this field is deprecated.
+  // As an alternative, grpc metadata can be used:
+  // https://cloud.google.com/apis/docs/system-parameters#definitions
+  optional google.protobuf.FieldMask read_mask = 12 [deprecated = true];
+
+  // The client can optionally set this field. The read handle is an optimized
+  // way of creating new streams. Read handles are generated and periodically
+  // refreshed from prior reads.
+  optional BidiReadHandle read_handle = 13;
+
+  // The routing token that influences request routing for the stream. Must be
+  // provided if a BidiReadObjectRedirectedError is returned.
+  optional string routing_token = 14;
+}
+
+// Request message for BidiReadObject.
+message BidiReadObjectRequest {
+  // The first message of each stream should set this field. If this is not
+  // the first message, an error will be returned. Describes the object to read.
+  BidiReadObjectSpec read_object_spec = 1;
+
+  // Provides a list of 0 or more (up to 100) ranges to read. If a single range
+  // is large enough to require multiple responses, they are guaranteed to be
+  // delivered in increasing offset order. There are no ordering guarantees
+  // across ranges. When no ranges are provided, the response message will not
+  // include ObjectRangeData. For full object downloads, the offset and size can
+  // be set to 0.
+  repeated ReadRange read_ranges = 8;
+}
+
+// Response message for BidiReadObject.
+message BidiReadObjectResponse {
+  // A portion of the object's data. The service **may** leave data
+  // empty for any given ReadResponse. This enables the service to inform the
+  // client that the request is still live while it is running an operation to
+  // generate more data.
+  // The service **may** pipeline multiple responses belonging to different read
+  // requests. Each ObjectRangeData entry will have a read_id
+  // set to the same value as the corresponding source read request.
+  repeated ObjectRangeData object_data_ranges = 6;
+
+  // Metadata of the object whose media is being returned.
+  // Only populated in the first response in the stream and not populated when
+  // the stream is opened with a read handle.
+  Object metadata = 4;
+
+  // This field will be periodically refreshed, however it may not be set in
+  // every response. It allows the client to more efficiently open subsequent
+  // bidirectional streams to the same object.
+  BidiReadHandle read_handle = 7;
+}
+
+// Error proto containing details for a redirected read. This error is only
+// returned on initial open in case of a redirect.
+message BidiReadObjectRedirectedError {
+  // The read handle for the redirected read. The client can use this for the
+  // subsequent open.
+  BidiReadHandle read_handle = 1;
+
+  // The routing token that should be used when reopening the read stream.
+  optional string routing_token = 2;
+}
+
+// Error proto containing details for a redirected write. This error is only
+// returned on initial open in case of a redirect.
+message BidiWriteObjectRedirectedError {
+  // The routing token that should be used when reopening the write stream.
+  optional string routing_token = 1;
+
+  // Opaque value describing a previous write.
+  optional BidiWriteHandle write_handle = 2;
+
+  // The generation of the object that triggered the redirect.
+  // Note that if this error was returned as part of an appendable object
+  // create, this object generation is now successfully created and
+  // append_object_spec should be used when reconnecting.
+  optional int64 generation = 3;
+}
+
+// Error extension proto containing details for all outstanding reads on the
+// failed stream
+message BidiReadObjectError {
+  // The error code for each outstanding read_range
+  repeated ReadRangeError read_range_errors = 1;
+}
+
+// Error extension proto containing details for a single range read
+message ReadRangeError {
+  // The id of the corresponding read_range
+  int64 read_id = 1;
+
+  // The status which should be an enum value of [google.rpc.Code].
+  google.rpc.Status status = 2;
+}
+
+// Describes a range of bytes to read in a BidiReadObjectRanges request.
+message ReadRange {
+  // Required. The offset for the first byte to return in the read, relative to
+  // the start of the object.
+  //
+  // A negative read_offset value will be interpreted as the number of bytes
+  // back from the end of the object to be returned. For example, if an object's
+  // length is 15 bytes, a ReadObjectRequest with read_offset = -5 and
+  // read_length = 3 would return bytes 10 through 12 of the object. Requesting
+  // a negative offset with magnitude larger than the size of the object will
+  // return the entire object. A read_offset larger than the size of the object
+  // will result in an OutOfRange error.
+  int64 read_offset = 1 [(google.api.field_behavior) = REQUIRED];
+
+  // Optional. The maximum number of data bytes the server is allowed to return
+  // across all response messages with the same read_id. A read_length of zero
+  // indicates to read until the resource end, and a negative read_length will
+  // cause an error. If the stream returns fewer bytes than allowed by the
+  // read_length and no error occurred, the stream includes all data from the
+  // read_offset to the resource end.
+  int64 read_length = 2 [(google.api.field_behavior) = OPTIONAL];
+
+  // Required. Read identifier provided by the client. When the client issues
+  // more than one outstanding ReadRange on the same stream, responses can be
+  // mapped back to their corresponding requests using this value. Clients must
+  // ensure that all outstanding requests have different read_id values. The
+  // server may close the stream with an error if this condition is not met.
+  int64 read_id = 3 [(google.api.field_behavior) = REQUIRED];
+}
+
+// Contains data and metadata for a range of an object.
+message ObjectRangeData {
+  // A portion of the data for the object.
+  ChecksummedData checksummed_data = 1;
+
+  // The ReadRange describes the content being returned with read_id set to the
+  // corresponding ReadObjectRequest in the stream. Multiple ObjectRangeData
+  // messages may have the same read_id but increasing offsets.
+  // ReadObjectResponse messages with the same read_id are guaranteed to be
+  // delivered in increasing offset order.
+  ReadRange read_range = 2;
+
+  // If set, indicates there are no more bytes to read for the given ReadRange.
+  bool range_end = 3;
+}
+
+// BidiReadHandle contains a handle from a previous BiDiReadObject
+// invocation. The client can use this instead of BidiReadObjectSpec as an
+// optimized way of opening subsequent bidirectional streams to the same object.
+message BidiReadHandle {
+  // Required. Opaque value describing a previous read.
+  bytes handle = 1 [(google.api.field_behavior) = REQUIRED];
+}
+
+// BidiWriteHandle contains a handle from a previous BidiWriteObject
+// invocation. The client can use this as an optimized way of opening subsequent
+// bidirectional streams to the same object.
+message BidiWriteHandle {
+  // Opaque value describing a previous write.
+  bytes handle = 1;
+}
+
 // Describes an attempt to insert an object, possibly over multiple requests.
 message WriteObjectSpec {
   // Required. Destination object, including its name and its metadata.
@@ -893,6 +1157,10 @@ message WriteObjectSpec {
   // you must start the upload over from scratch, this time sending the correct
   // number of bytes.
   optional int64 object_size = 8;
+
+  // If true, the object will be created in appendable mode.
+  // This field may only be set when using BidiWriteObject.
+  optional bool appendable = 9;
 }
 
 // Request message for WriteObject.
@@ -962,6 +1230,37 @@ message WriteObjectResponse {
   }
 }
 
+// Describes an attempt to append to an object, possibly over multiple requests.
+message AppendObjectSpec {
+  // Required. The name of the bucket containing the object to write.
+  string bucket = 1 [
+    (google.api.field_behavior) = REQUIRED,
+    (google.api.resource_reference) = { type: "storage.googleapis.com/Bucket" }
+  ];
+
+  // Required. The name of the object to open for writing.
+  string object = 2 [(google.api.field_behavior) = REQUIRED];
+
+  // Required. The generation number of the object to open for writing.
+  int64 generation = 3 [(google.api.field_behavior) = REQUIRED];
+
+  // Makes the operation conditional on whether the object's current
+  // metageneration matches the given value.
+  optional int64 if_metageneration_match = 4;
+
+  // Makes the operation conditional on whether the object's current
+  // metageneration does not match the given value.
+  optional int64 if_metageneration_not_match = 5;
+
+  // An optional routing token that influences request routing for the stream.
+  // Must be provided if a BidiWriteObjectRedirectedError is returned.
+  optional string routing_token = 6;
+
+  // An optional write handle returned from a previous BidiWriteObjectResponse
+  // message or a BidiWriteObjectRedirectedError error.
+  optional BidiWriteHandle write_handle = 7;
+}
+
 // Request message for BidiWriteObject.
 message BidiWriteObjectRequest {
   // The first message of each stream should set one of the following.
@@ -973,6 +1272,9 @@ message BidiWriteObjectRequest {
     // For non-resumable uploads. Describes the overall upload, including the
     // destination bucket and object name, preconditions, etc.
     WriteObjectSpec write_object_spec = 2;
+
+    // For appendable uploads. Describes the object to append to.
+    AppendObjectSpec append_object_spec = 11;
   }
 
   // Required. The offset from the beginning of the object at which the data
@@ -1045,6 +1347,11 @@ message BidiWriteObjectResponse {
     // the upload has finalized.
     Object resource = 2;
   }
+
+  // An optional write handle that will periodically be present in response
+  // messages. Clients should save it for later use in establishing a new stream
+  // if a connection is interrupted.
+  optional BidiWriteHandle write_handle = 3;
 }
 
 // Request message for ListObjects.
@@ -1390,25 +1697,28 @@ message MoveObjectRequest {
 
 // Request message StartResumableWrite.
 message StartResumableWriteRequest {
-  // Required. The destination bucket, object, and metadata, as well as any
-  // preconditions.
+  // Required. Contains the information necessary to start a resumable write.
   WriteObjectSpec write_object_spec = 1
       [(google.api.field_behavior) = REQUIRED];
 
-  // A set of parameters common to Storage API requests concerning an object.
+  // A set of parameters common to Storage API requests related to an object.
   CommonObjectRequestParams common_object_request_params = 3;
 
-  // The checksums of the complete object. This will be used to validate the
-  // uploaded object. For each upload, object_checksums can be provided with
-  // either StartResumableWriteRequest or the WriteObjectRequest with
-  // finish_write set to `true`.
+  // The checksums of the complete object. This is used to validate the
+  // uploaded object. For each upload, `object_checksums` can be provided when
+  // initiating a resumable upload with`StartResumableWriteRequest` or when
+  // completing a write with `WriteObjectRequest` with
+  // `finish_write` set to `true`.
   ObjectChecksums object_checksums = 5;
 }
 
 // Response object for `StartResumableWrite`.
 message StartResumableWriteResponse {
-  // The upload_id of the newly started resumable write operation. This
-  // value should be copied into the `WriteObjectRequest.upload_id` field.
+  // A unique identifier for the initiated resumable write operation.
+  // As the ID grants write access, you should keep it confidential during
+  // the upload to prevent unauthorized access and data tampering during your
+  // upload. This ID should be included in subsequent `WriteObject` requests to
+  // upload the object data.
   string upload_id = 1;
 }
 
@@ -1555,6 +1865,9 @@ message ServiceConstants {
     // The maximum number of days for which a token returned by the
     // GetListObjectsSplitPoints RPC is valid.
     SPLIT_TOKEN_MAX_VALID_DAYS = 14;
+
+    // The maximum number of read ranges that can be in flight.
+    MAX_READ_RANGES_IN_FLIGHT = 100;
   }
 }
 
